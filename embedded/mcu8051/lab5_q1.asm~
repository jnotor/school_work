; ******************************************************************************
; * Lab5 Q1   Ver 001
; * J. Notorgiacomo 10/30/2020
; * Description: JUMP THRU SOME LOGICAL HOOPS & BIT MANIPULATION :^)

UPPERNIB EQU 30h        ; create storage variables at target memory locations
LOWERNIB EQU 31h
STORE0123 EQU 32h
STORE4567 EQU 33h

INIT:
MOV UPPERNIB, #00H      ; init values of storage variables to 0
MOV LOWERNIB, #00H
MOV STORE0123, #00H
MOV STORE0123, #00H

MAIN:
MOV LOWERNIB, P1
ANL LOWERNIB, #00FH     ; bit wise AND lower storage with 0000 1111 to save only lower nib

MOV A, P1
ANL A, #0F0H     	; bit wise AND upper storage with 1111 0000 to save only upper nib
SWAP A			; swap upper and lower vals
MOV UPPERNIB, A

JB P2.0, P2B0HIGH 	; jump logic
SJMP P2B0LOW

P2B0LOW:
MOV STORE0123, LOWERNIB ; PERFORM AND ON LOWER AND UPPER NIB, STORING IN STORAGE FOR BITS 0123
MOV A, UPPERNIB
ANL STORE0123, A

MOV STORE4567, LOWERNIB ; PERFORM OR ON LOWER AND UPPER NIB, STORING IN STORAGE FOR BITS 4567
MOV A, UPPERNIB
ORL STORE4567, A

ANL STORE0123, #00FH   ; KEEP ONLY LOWER 4 BITS OF STORE0123
MOV A, STORE4567
SWAP A			; KEEP ONLY UPPER 4 BITS OF STORE4567

ORL STORE0123, A	; OR STORES 0123 AND 4567 TOGETHER FOR P3 OUTPUT
MOV P3, STORE0123	; STORE OUTPUT IN P3
SJMP MAIN

P2B0HIGH:
MOV STORE0123, LOWERNIB ; PERFORM XOR ON LOWER AND UPPER NIB, STORING IN STORAGE FOR BITS 0123
MOV A, UPPERNIB
XRL STORE0123, A

MOV A, LOWERNIB 	; PERFORM NOT ON LOWER NIB, STORING IN STORAGE FOR BITS 4567
CPL A			; COMPLIMENT THE PRETTY ACCUMULATOR
MOV STORE4567, A	; STORE COMPLIMENT IN 4567 CONTAINER

ANL STORE0123, #00FH   ; KEEP ONLY LOWER 4 BITS OF STORE0123
MOV A, STORE4567
ANL A, #0FH
SWAP A		; KEEP ONLY UPPER 4 BITS OF STORE4567

ORL STORE0123, A	; OR STORES 0123 AND 4567 TOGETHER FOR P3 OUTPUT
MOV P3, STORE0123	; STORE OUTPUT IN P3
SJMP MAIN
.END