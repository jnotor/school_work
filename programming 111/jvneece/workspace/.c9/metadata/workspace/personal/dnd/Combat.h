{"changed":true,"filter":false,"title":"Combat.h","tooltip":"/personal/dnd/Combat.h","value":"\n// combat functions\n// Class Description:\n\n#include <iostream> \n#include <string> \n#include \"PlayerDND.h\"\n\nusing namespace std;\n\n#ifndef COMBAT_H\n#define COMBAT_H\n\nclass Combat {\npublic:\n\t//Combat();\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//turning off default for now\n\tCombat(PlayerDND, PlayerDND);\n\tvoid playGame();\n\t// void initializeBets();\n\t// void initializeHands();\n\t// void insurance();\n\t// void dealerSecond(); \n\t// void checkBJ();\n\t// void gameMenu();\n\t// void dealerTurn();\n\t// void displayScores(int, int);\n\t// void results();\n\t// void postRoundInfo();\n\t// void resets();\nprivate:\n\t// int funds, holdfunds, playerBet, insuranceBet, value, count, firstCard, secondCard, dfirstCard, dsecondCard, BJcount, menuChoice, round;\n\t// bool validResponse, flag, flag2, aceFlag, dealerAceFlag;\n\tint turn;\n\t// char yes_or_no, y_or_n;\n\tPlayerDND kobold(12,5,4,4);\n\tPlayerDND Blug(17,98,7,12);\t\t\t\t\t\t\t\t\t\t\t\t\t//avgdmg calculated without smite; with a smite (level 2, of 3) would be 25\n\t//Deck gameDeck;\n};\n\n#endif\n\n// Play_Game Class function  below\n\n////////////////////////////////////////////////////////////////////////////////Constructor\t\t\tdont think i need to make a constructor, as the compiler will auto make a default and the players are already declared in the private\n\n// Combat::Combat(PlayerDND P1, PlayerDND P2) {\n// \tPlayerDND\n\n// }\n\n////////////////////////////////////////////////////////////////////////////////Start\n\nvoid Play_Game_QuickExport::playGame() {\n\t\n\t////////////////////////////////////////////////////////////////////////////Game with Functions in it\n\t\n\tcout << \"You start with \" << funds << \" chips to bet with. Bets will be placed in whole numbers, rounded down.\" << endl << endl;\n\twhile (funds > 0) {\n\t\tcout << \"Would you like to play a round of Blackjack? (y for yes, any other character for no) \" << endl;\n\t\tcin >> yes_or_no;\n\t\t\n\t\tif (yes_or_no == 'y') {\n\t\t\tgameDeck.setDeck();\t\t\t\t\t\t\t\t\t\t\t\t\t//resetting the deck every round to mimic multiple decks\n\t\t\tround = 0;  \n\t\t\tinitializeBets();\n\t\t\tinitializeHands();\n\t\t\tinsurance();\n\t\t\tdealerSecond(); \n\t\t\tcheckBJ();\n\t\t\twhile (flag) {\n\t\t\t\tgameMenu();\n\t\t\t\tif (flag) {\n\t\t\t\t\tdealerTurn();\n\t\t\t\t\tresults();\n\t\t\t\t}\n\t\t\t}\n\t\t\tpostRoundInfo();\n\t\t\tresets();\n\t\t}\n\t\t\n\t\telse {\n\t\t\tfunds = 0;\n\t\t\tcout << endl << \"Maybe another time then :(\" << endl;\n\t\t}\n\t}\n}\n\n////////////////////////////////////////////////////////////////////////////////intialize Player Bet\n\nvoid Play_Game_QuickExport::initializeBets() { \n\t\n\tcout << \"Place your bet: \" << endl;\n\tplayerBet = gameDeck.cinFailCheck();\t\t\t\t\t\t\t\t\t\t//making sure input is a digit and wont cause infinite loop\n\t\n\twhile ((playerBet > user.getBet()) || (playerBet < 1))   {\t\t\t\t\t//disallows invalid betting due to number of chips\n\t\tcout << \"Invalid number of chips to bet. Please place a bet less than or equal to the number of chips you have.\" << endl;\n\t\tplayerBet = gameDeck.cinFailCheck();\n\t}\n\t\n\tuser.placeBet(playerBet);\n\tfunds = user.getBet();\n\tcout << \"Funds left currently: \" << funds << endl << endl;\n}\n\n////////////////////////////////////////////////////////////////////////////////intialize hands - draw cards 0 - 2\n\nvoid Play_Game_QuickExport::initializeHands() {\n\t\n\tcout << \"Your starting hand is: \"  << endl;\n\tfirstCard = gameDeck.getNextCard(round, user.getScore());\n\tround ++;\n\taceFlag = gameDeck.aceChecker(firstCard);\n\tcout << \"and \";\n\tsecondCard = gameDeck.getNextCard(round, user.getScore());\n\tround ++;\n\n\tif (!aceFlag)   {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//making sure that if they already have 1 ace, we don't reset the ace flag if the second card is not an ace\t\n\t\taceFlag = gameDeck.aceChecker(secondCard);\n\t}\n\t\n\tuser.addScore(firstCard+secondCard);\n\tcout << endl;\n\t\n////////////////////////////////////////////////////////////////////////////////dealer first card\t\t\t\n\t\t\t\n\tcout << \"The dealer is showing a \";\n\tdfirstCard = gameDeck.getNextCard(round, dealer.getScore());\n\tround++;\n\tdealerAceFlag = gameDeck.aceChecker(dfirstCard);\n\tdealer.addScore(dfirstCard);\n}\n\n////////////////////////////////////////////////////////////////////////////////player insurance - only available if dealer showing an ace\n\nvoid Play_Game_QuickExport::insurance() {\n\t\n\tif (dealer.getScore()==11)   {\n\t\tcout << \"Would you like to take insurance against the Dealer's potential BlackJack? (y for yes, any other character for no)\" << endl;\n\t\tcin >> y_or_n;\n\t\t\n\t\tif (y_or_n == 'y')   {\n\t\t\tcout << \"Insurance against Dealer BlackJack is paid out 2:1. How much would you like to bet on Insurance?\" << endl;\n\t\t\t\n\t\t\tinsuranceBet = gameDeck.cinFailCheck(); //preventing infinite loop due to wrong input type\n\t\t\t\n\t\t\twhile ((insuranceBet > user.getBet()) || (insuranceBet < 1))   {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tcout << \"Invalid number of chips to bet. Please place a bet less than or equal to the number of chips you have.\" << endl;\n\t\t\t\tinsuranceBet = gameDeck.cinFailCheck();\n\t\t\t}\n\t\t\t\n\t\t\tuser.placeBet(insuranceBet);\n\t\t\tcout << \"Okay, \" << insuranceBet << \" coins bet as insurance.\" << endl;\n\t\t}\n\t\t\n\t\telse {\n\t\t\tcout << \"Okay, no insurance it is.\" << endl;\n\t\t}\n\t}\n}\n\n////////////////////////////////////////////////////////////////////////////////dealer second Card is drawn but not added to total; this is to check for blackjack but not alert player as to the dealer's second card\n\nvoid Play_Game_QuickExport::dealerSecond() {\n\t\n\tdo {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//prevents dealer from drawing a zero, should the random number % return 0\n\tdsecondCard = rand() % 11;\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tif (dsecondCard == 1)   {\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\tdsecondCard = 11;\n\t\t}\n\t} while (dsecondCard < 1);\n\t\n\tif (!dealerAceFlag)   {\t\t\t\t\t\t\t\t\t\t\t\t\t\t//making sure that if dealer already has 1 ace, we don't reset the ace flag if the second card is not an ace\n\t\tdealerAceFlag = gameDeck.aceChecker(dsecondCard);\n\t}\n}\n\n////////////////////////////////////////////////////////////////////////////////Blackjack Checker\n\nvoid Play_Game_QuickExport::checkBJ() {\n\t\t\n\tif (firstCard+secondCard == 21) {\n\t\tBJcount += 1;\n\t}\n\t\n\tif (dfirstCard + dsecondCard == 21)   {\n\t\tBJcount += 10;\n\t}\n\t\t\t\n\tif (BJcount == 1)   {\t\t\t\t\t\t\t\t\t\t\t\t\t//player has BJ\n\t\tcout << \"Blackjack! You Win!\" << endl;\n\t\tplayerBet = (0 - playerBet)*1.5;\n\t\tuser.placeBet(playerBet);\n\t\tcout << \"User chips total: \" << user.getBet() << endl;\n\t\tflag = false;\n\t}\n\t\n\telse if (BJcount == 10)   {\t\t\t\t\t\t\t\t\t\t\t\t//dealer has BJ\n\t\n\t\tif (y_or_n == 'y')   {\n\t\t\tcout << \"Wow! Guess Your Insurance paid off!\" << endl;\n\t\t\tinsuranceBet = (0 - insuranceBet) * 2;\n\t\t\tuser.placeBet(insuranceBet);\n\t\t\tcout << \"User chips total: \" << user.getBet() << endl;\n\t\t}\n\t\t\n\t\telse {\n\t\tcout << \"Dealer has Blackjack! You Lose!\" << endl;\n\t\tcout << \"User chips left currently: \" << user.getBet() << endl;\n\t\t}\n\t\t\n\t\tflag = false;\n\t}\n\t\n\telse if (BJcount == 11)   {\t\t\t\t\t\t\t\t\t\t\t\t//both blackjack\n\t\tcout << \"Push! You and the Dealer both have Blackjack!\" << endl;\n\t\t\n\t\tif (y_or_n == 'y')   {\n\t\t\tcout << \"Wow! Guess Your Insurance paid off!\" << endl;\n\t\t\tinsuranceBet = (0 - insuranceBet) * 1.5;\n\t\t\tuser.placeBet(insuranceBet);\n\t\t}\n\t\t\n\t\telse   {\n\t\tplayerBet = 0 - playerBet;\n\t\tuser.placeBet(playerBet);\n\t\t}\n\t\t\n\t\tcout << \"User chips left currently: \" << user.getBet() << endl;\n\t\tflag = false;\n\t}\n}\n\n////////////////////////////////////////////////////////////////////////////////display score function\n\nvoid Play_Game_QuickExport::displayScores(int userScore, int dealerScore) {\n\t\n\tcout << endl << \"Your Score: \" << userScore << endl;\n\tcout << \"Known Dealer Score: \" << dealerScore << endl;\n}\n\n////////////////////////////////////////////////////////////////////////////////Game Menu\n\nvoid Play_Game_QuickExport::gameMenu() {\n\t\n\tvalidResponse = false;\n\twhile (!validResponse) { \t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tdisplayScores(user.getScore(), dealer.getScore());\n\t\tcout << endl << \"What would you like to do? \" << endl;\n\t\tcout << \"\t1 = Hit \" << endl;\n\t\tcout << \"\t2 = Stand \" << endl;\n\t\tcout << \"\t3 = Surrender \" << endl;\n\t\tcout << \"\t4 = Double Down \" << endl;\n\t\tcin >> menuChoice;\n\t\tswitch (menuChoice) {\n\t\t\t\t\t\t\n////////////////////////////////Decisions, Decisions\n\n/////////////////Hit\n\t\t\tcase 1:\n\t\t\t\tcout << \"You Drew: \" << endl;\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tvalue = gameDeck.getNextCard(round, user.getScore());\n\t\t\t\tuser.addScore(value);\n\t\t\t\tvalidResponse = false;\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tround++;\n\t\t\t\t\n\t\t\t\tif (!aceFlag)   {\t\t\t\t\t\t\t\t\t\t\t\t//making sure that if they already have 1 ace, we don't reset the ace flag if the second card is not an ace\n\t\t\t\t\taceFlag = gameDeck.aceChecker(value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (user.getScore() > 21) {\t\t\t\t\t\t\t\t\t\t//checking for true bust or bust with ace = 11; altering score if the ace is being counted as an 11. same is done for dealer\n\t\t\t\t\n\t\t\t\t\tif (aceFlag)   {\n\t\t\t\t\t\tcout << \"Your Ace must count as a 1 in order to avoid Busting. Changing Score now...\" << endl;\n\t\t\t\t\t\tuser.addScore(0-10);\n\t\t\t\t\t\tcout << \"New Score is: \" << user.getScore() << endl;\n\t\t\t\t\t\taceFlag = false;\t\t\t\t\t\t\t\t\t\t//changing aceFlag to false so the score - 10 only happens 1 time. all subsequent aces will be 1's anyway. same for dealer\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse {\n\t\t\t\t\t\tcout << \"Bust! You Lose! \" << endl;\n\t\t\t\t\t\tcout << \"User chips left currently: \" << user.getBet() << endl;\n\t\t\t\t\t\tvalidResponse = true;\t\t\n\t\t\t\t\t\tflag = false;\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\t\n\t/////////////////Stand\n\t\t\tcase 2: \n\t\t\t\tvalidResponse = true;\n\t\t\t\tbreak;\n\t\t\t\t\n\t/////////////////Surrender\n\t\t\tcase 3:\n\t\t\t\tplayerBet = (0 - playerBet) / 2;\n\t\t\t\tuser.placeBet(playerBet);\n\t\t\t\tvalidResponse = true;\n\t\t\t\tflag = false;\n\t\t\t\tflag2 = true;\n\t\t\t\tbreak;\n\t\t\t\t\n\t/////////////////Double Down\n\t\t\tcase 4: \n\t\t\t\n\t\t\t\tif (user.getBet()-playerBet*2 < 0)   {\n\t\t\t\t\tcout << \"Sorry, not enough funds to Double Down. Please Select another option\" << endl;\n\t\t\t\t\tvalidResponse = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse   {\n\t\t\t\t\tcout << \"Doubling Down...\" << endl;\n\t\t\t\t\tcout << \"Bet is now: \" << playerBet *2 << endl;\n\t\t\t\t\tuser.placeBet(playerBet);\n\t\t\t\t\tplayerBet = playerBet *2;\n\t\t\t\t\tcout << \"Drawing next card...\" << endl;\n\t\t\t\t\tcout << \"You Drew: \" << endl;\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tvalue = gameDeck.getNextCard(round, user.getScore());\n\t\t\t\t\tuser.addScore(value);\n\t\t\t\t\tvalidResponse = true;\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tround++;\n\t\t\t\t\tif (user.getScore() > 21) {\n\t\t\t\t\t\tcout << \"Bust! You Lose! \" << endl;\n\t\t\t\t\t\tcout << \"User chips left currently: \" << user.getBet() << endl;\n\t\t\t\t\t\tvalidResponse = true;\t\t\n\t\t\t\t\t\tflag = false;\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcout << \"Invalid input, please enter a valid input. \" << endl;\n\t\t\t\tvalidResponse = false;\n\t\t}\n\t}\n}\n\n////////////////////////////////////////////////////////////////////////////////Dealer's Turn\n\nvoid Play_Game_QuickExport::dealerTurn() {\n\t\n\tdealer.addScore(dsecondCard); \n\tcout << \"Dealer flips 2nd card and his score is now: \" << dealer.getScore() << endl;\n\t\n\twhile (dealer.getScore() < 17) {\n\t\tcout << endl << \"Dealer Drew: \" << endl;\n\t\tvalue = gameDeck.getNextCard(round, dealer.getScore());\n\t\tdealer.addScore(value);\n\t\tround++;\n\t\tcout << endl;\n\t\tdisplayScores(user.getScore(), dealer.getScore());\n\t\tcout << endl;\n\t}\n\t\n\tif (dealer.getScore() < 22) {\n\t\t\tcout << \"Dealer can no longer draw: \" << dealer.getScore() << endl;\n\t}\n\telse if (dealerAceFlag)   {\n\t\t\tdealer.addScore(0-10);\n\t\t\tdealerAceFlag = false;\n\t}\n\telse  {\n\t\tcout << dealer.getScore() << \": Dealer Busts!\" << endl;\n\t}\n}\n\n////////////////////////////////////////////////////////////////////////////////Determine Round Winner\n\nvoid Play_Game_QuickExport::results() { \n\n\tif (dealer.getScore() == user.getScore())   {\n\t\tcout << \"Push! \" << endl;\n\t\tplayerBet = 0 - playerBet;\n\t\tuser.placeBet(playerBet);\n\t\tcout << \"User chips left currently: \" << user.getBet() << endl;\n\t}\n\telse if ((dealer.getScore() > 21) || (dealer.getScore() < user.getScore())) {\n\t\tcout << \"You Win! \" << endl;\n\t\tplayerBet = (0 - playerBet)*2;\n\t\tuser.placeBet(playerBet);\n\t\tcout << \"User chips total: \" << user.getBet() << endl;\n\t}\n\telse if ((dealer.getScore() > user.getScore()) || (flag2)) {\t\t\t\t\n\t\tcout << \"You Lose! \" << endl;\t\t\t\t\t\t\t\t\t\t\t//flag2 here is referring to if they surrendered\n\t\tcout << \"User chips left currently: \" << user.getBet() << endl;\n\t}\n\tflag = false;\n}\n\n////////////////////////////////////////////////////////////////////////////////Post Round Info\n\nvoid Play_Game_QuickExport::postRoundInfo() {\n\t\n\tfunds = user.getBet();\n\tholdfunds = funds;\n\t\n\tif (!(yes_or_no == 'y'))   {\n\t\tfunds = 0;\n\t\tflag2 = true;\n\t}\n\t\n\tif ((!flag2) && (funds < 1))   {\n\tcout << \"You're out of funds! Thanks for playing! Goodbye!\" << endl;\n\t}\n\telse if (flag2) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\tcout << \"You have \" << holdfunds << \" chips. Thanks for playing!\" << endl;\n\t}\n\telse {\n\t\tcount += 1;\n\t\tcout << \"Rounds played: \"  << count << endl;\n\t}\n\t\n\tuser.addScore(0-user.getScore());\n\tdealer.addScore(0 - dealer.getScore());\n}\n\n////////////////////////////////////////////////////////////////////////////////Reset anything that needs to be reset\n\nvoid Play_Game_QuickExport::resets() {\n\t\n\tflag = true;\n\tBJcount = 0;\n\ty_or_n = 'n';\n\t\n}","undoManager":{"mark":98,"position":100,"stack":[[{"start":{"row":35,"column":88},"end":{"row":35,"column":89},"action":"insert","lines":[" "],"id":54}],[{"start":{"row":35,"column":88},"end":{"row":35,"column":89},"action":"remove","lines":[" "],"id":55},{"start":{"row":35,"column":87},"end":{"row":35,"column":88},"action":"remove","lines":["e"]}],[{"start":{"row":35,"column":87},"end":{"row":35,"column":88},"action":"insert","lines":["e"],"id":56}],[{"start":{"row":35,"column":88},"end":{"row":35,"column":89},"action":"insert","lines":[" "],"id":57}],[{"start":{"row":35,"column":89},"end":{"row":35,"column":91},"action":"insert","lines":["()"],"id":58}],[{"start":{"row":35,"column":90},"end":{"row":35,"column":91},"action":"insert","lines":["l"],"id":59},{"start":{"row":35,"column":91},"end":{"row":35,"column":92},"action":"insert","lines":["e"]},{"start":{"row":35,"column":92},"end":{"row":35,"column":93},"action":"insert","lines":["v"]},{"start":{"row":35,"column":93},"end":{"row":35,"column":94},"action":"insert","lines":["e"]},{"start":{"row":35,"column":94},"end":{"row":35,"column":95},"action":"insert","lines":["l"]}],[{"start":{"row":35,"column":95},"end":{"row":35,"column":96},"action":"insert","lines":[" "],"id":60},{"start":{"row":35,"column":96},"end":{"row":35,"column":97},"action":"insert","lines":["2"]},{"start":{"row":35,"column":97},"end":{"row":35,"column":98},"action":"insert","lines":[","]}],[{"start":{"row":35,"column":98},"end":{"row":35,"column":99},"action":"insert","lines":[" "],"id":61},{"start":{"row":35,"column":99},"end":{"row":35,"column":100},"action":"insert","lines":["o"]},{"start":{"row":35,"column":100},"end":{"row":35,"column":101},"action":"insert","lines":["f"]}],[{"start":{"row":35,"column":101},"end":{"row":35,"column":102},"action":"insert","lines":[" "],"id":62},{"start":{"row":35,"column":102},"end":{"row":35,"column":103},"action":"insert","lines":["3"]}],[{"start":{"row":35,"column":104},"end":{"row":35,"column":105},"action":"insert","lines":[" "],"id":63},{"start":{"row":35,"column":105},"end":{"row":35,"column":106},"action":"insert","lines":["w"]},{"start":{"row":35,"column":106},"end":{"row":35,"column":107},"action":"insert","lines":["o"]},{"start":{"row":35,"column":107},"end":{"row":35,"column":108},"action":"insert","lines":["u"]},{"start":{"row":35,"column":108},"end":{"row":35,"column":109},"action":"insert","lines":["l"]},{"start":{"row":35,"column":109},"end":{"row":35,"column":110},"action":"insert","lines":["d"]}],[{"start":{"row":35,"column":110},"end":{"row":35,"column":111},"action":"insert","lines":[" "],"id":64},{"start":{"row":35,"column":111},"end":{"row":35,"column":112},"action":"insert","lines":["b"]},{"start":{"row":35,"column":112},"end":{"row":35,"column":113},"action":"insert","lines":["e"]}],[{"start":{"row":35,"column":113},"end":{"row":35,"column":114},"action":"insert","lines":[" "],"id":65},{"start":{"row":35,"column":114},"end":{"row":35,"column":115},"action":"insert","lines":["2"]},{"start":{"row":35,"column":115},"end":{"row":35,"column":116},"action":"insert","lines":["5"]}],[{"start":{"row":31,"column":1},"end":{"row":31,"column":4},"action":"insert","lines":["// "],"id":66},{"start":{"row":32,"column":1},"end":{"row":32,"column":4},"action":"insert","lines":["// "]},{"start":{"row":33,"column":1},"end":{"row":33,"column":4},"action":"insert","lines":["// "]}],[{"start":{"row":45,"column":0},"end":{"row":45,"column":3},"action":"insert","lines":["// "],"id":67},{"start":{"row":46,"column":0},"end":{"row":46,"column":3},"action":"insert","lines":["// "]},{"start":{"row":47,"column":0},"end":{"row":47,"column":3},"action":"insert","lines":["// "]},{"start":{"row":48,"column":0},"end":{"row":48,"column":3},"action":"insert","lines":["// "]},{"start":{"row":49,"column":0},"end":{"row":49,"column":3},"action":"insert","lines":["// "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":3},"action":"insert","lines":["// "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":3},"action":"insert","lines":["// "]},{"start":{"row":52,"column":0},"end":{"row":52,"column":3},"action":"insert","lines":["// "]},{"start":{"row":53,"column":0},"end":{"row":53,"column":3},"action":"insert","lines":["// "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":3},"action":"insert","lines":["// "]},{"start":{"row":55,"column":0},"end":{"row":55,"column":3},"action":"insert","lines":["// "]},{"start":{"row":56,"column":0},"end":{"row":56,"column":3},"action":"insert","lines":["// "]},{"start":{"row":57,"column":0},"end":{"row":57,"column":3},"action":"insert","lines":["// "]},{"start":{"row":58,"column":0},"end":{"row":58,"column":3},"action":"insert","lines":["// "]},{"start":{"row":59,"column":0},"end":{"row":59,"column":3},"action":"insert","lines":["// "]},{"start":{"row":60,"column":0},"end":{"row":60,"column":3},"action":"insert","lines":["// "]},{"start":{"row":61,"column":0},"end":{"row":61,"column":3},"action":"insert","lines":["// "]},{"start":{"row":62,"column":0},"end":{"row":62,"column":3},"action":"insert","lines":["// "]},{"start":{"row":63,"column":0},"end":{"row":63,"column":3},"action":"insert","lines":["// "]},{"start":{"row":64,"column":0},"end":{"row":64,"column":3},"action":"insert","lines":["// "]},{"start":{"row":65,"column":0},"end":{"row":65,"column":3},"action":"insert","lines":["// "]}],[{"start":{"row":32,"column":60},"end":{"row":33,"column":0},"action":"insert","lines":["",""],"id":68},{"start":{"row":33,"column":0},"end":{"row":33,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":33,"column":1},"end":{"row":33,"column":2},"action":"insert","lines":["i"]},{"start":{"row":33,"column":2},"end":{"row":33,"column":3},"action":"insert","lines":["n"]},{"start":{"row":33,"column":3},"end":{"row":33,"column":4},"action":"insert","lines":["t"]}],[{"start":{"row":33,"column":4},"end":{"row":33,"column":5},"action":"insert","lines":[" "],"id":69},{"start":{"row":33,"column":5},"end":{"row":33,"column":6},"action":"insert","lines":["t"]},{"start":{"row":33,"column":6},"end":{"row":33,"column":7},"action":"insert","lines":["u"]},{"start":{"row":33,"column":7},"end":{"row":33,"column":8},"action":"insert","lines":["r"]},{"start":{"row":33,"column":8},"end":{"row":33,"column":9},"action":"insert","lines":["n"]},{"start":{"row":33,"column":9},"end":{"row":33,"column":10},"action":"insert","lines":[";"]}],[{"start":{"row":17,"column":1},"end":{"row":17,"column":2},"action":"insert","lines":["/"],"id":70},{"start":{"row":17,"column":2},"end":{"row":17,"column":3},"action":"insert","lines":["/"]},{"start":{"row":17,"column":3},"end":{"row":17,"column":4},"action":"insert","lines":["0"]},{"start":{"row":17,"column":4},"end":{"row":17,"column":5},"action":"insert","lines":["0"]}],[{"start":{"row":17,"column":4},"end":{"row":17,"column":5},"action":"remove","lines":["0"],"id":71},{"start":{"row":17,"column":3},"end":{"row":17,"column":4},"action":"remove","lines":["0"]}],[{"start":{"row":17,"column":12},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":72},{"start":{"row":18,"column":0},"end":{"row":18,"column":1},"action":"insert","lines":["\t"]},{"start":{"row":18,"column":1},"end":{"row":18,"column":2},"action":"insert","lines":["C"]},{"start":{"row":18,"column":2},"end":{"row":18,"column":3},"action":"insert","lines":["o"]},{"start":{"row":18,"column":3},"end":{"row":18,"column":4},"action":"insert","lines":["m"]},{"start":{"row":18,"column":4},"end":{"row":18,"column":5},"action":"insert","lines":["b"]},{"start":{"row":18,"column":5},"end":{"row":18,"column":6},"action":"insert","lines":["a"]},{"start":{"row":18,"column":6},"end":{"row":18,"column":7},"action":"insert","lines":["t"]}],[{"start":{"row":17,"column":12},"end":{"row":17,"column":13},"action":"insert","lines":["\t"],"id":73}],[{"start":{"row":17,"column":13},"end":{"row":17,"column":14},"action":"insert","lines":["\t"],"id":74}],[{"start":{"row":17,"column":14},"end":{"row":17,"column":15},"action":"insert","lines":["\t"],"id":75}],[{"start":{"row":17,"column":15},"end":{"row":17,"column":16},"action":"insert","lines":["\t"],"id":76}],[{"start":{"row":17,"column":16},"end":{"row":17,"column":17},"action":"insert","lines":["\t"],"id":77}],[{"start":{"row":17,"column":17},"end":{"row":17,"column":18},"action":"insert","lines":["\t"],"id":78}],[{"start":{"row":17,"column":18},"end":{"row":17,"column":19},"action":"insert","lines":["\t"],"id":79}],[{"start":{"row":17,"column":19},"end":{"row":17,"column":20},"action":"insert","lines":["\t"],"id":80}],[{"start":{"row":17,"column":20},"end":{"row":17,"column":21},"action":"insert","lines":["\t"],"id":81}],[{"start":{"row":17,"column":21},"end":{"row":17,"column":22},"action":"insert","lines":["\t"],"id":82}],[{"start":{"row":17,"column":22},"end":{"row":17,"column":23},"action":"insert","lines":["\t"],"id":83}],[{"start":{"row":17,"column":23},"end":{"row":17,"column":24},"action":"insert","lines":["\t"],"id":84}],[{"start":{"row":17,"column":24},"end":{"row":17,"column":25},"action":"insert","lines":["\t"],"id":85}],[{"start":{"row":17,"column":25},"end":{"row":17,"column":26},"action":"insert","lines":["\t"],"id":86}],[{"start":{"row":17,"column":26},"end":{"row":17,"column":27},"action":"insert","lines":["\t"],"id":87}],[{"start":{"row":17,"column":27},"end":{"row":17,"column":28},"action":"insert","lines":["\t"],"id":88}],[{"start":{"row":17,"column":28},"end":{"row":17,"column":29},"action":"insert","lines":["\t"],"id":89}],[{"start":{"row":17,"column":29},"end":{"row":17,"column":30},"action":"insert","lines":["/"],"id":90},{"start":{"row":17,"column":30},"end":{"row":17,"column":31},"action":"insert","lines":["/"]}],[{"start":{"row":17,"column":31},"end":{"row":17,"column":32},"action":"insert","lines":["t"],"id":91},{"start":{"row":17,"column":32},"end":{"row":17,"column":33},"action":"insert","lines":["u"]},{"start":{"row":17,"column":33},"end":{"row":17,"column":34},"action":"insert","lines":["r"]},{"start":{"row":17,"column":34},"end":{"row":17,"column":35},"action":"insert","lines":["n"]},{"start":{"row":17,"column":35},"end":{"row":17,"column":36},"action":"insert","lines":["i"]},{"start":{"row":17,"column":36},"end":{"row":17,"column":37},"action":"insert","lines":["n"]},{"start":{"row":17,"column":37},"end":{"row":17,"column":38},"action":"insert","lines":["g"]}],[{"start":{"row":17,"column":38},"end":{"row":17,"column":39},"action":"insert","lines":[" "],"id":92},{"start":{"row":17,"column":39},"end":{"row":17,"column":40},"action":"insert","lines":["o"]},{"start":{"row":17,"column":40},"end":{"row":17,"column":41},"action":"insert","lines":["f"]},{"start":{"row":17,"column":41},"end":{"row":17,"column":42},"action":"insert","lines":["f"]}],[{"start":{"row":17,"column":42},"end":{"row":17,"column":43},"action":"insert","lines":[" "],"id":93},{"start":{"row":17,"column":43},"end":{"row":17,"column":44},"action":"insert","lines":["d"]},{"start":{"row":17,"column":44},"end":{"row":17,"column":45},"action":"insert","lines":["e"]},{"start":{"row":17,"column":45},"end":{"row":17,"column":46},"action":"insert","lines":["f"]},{"start":{"row":17,"column":46},"end":{"row":17,"column":47},"action":"insert","lines":["a"]},{"start":{"row":17,"column":47},"end":{"row":17,"column":48},"action":"insert","lines":["u"]},{"start":{"row":17,"column":48},"end":{"row":17,"column":49},"action":"insert","lines":["l"]},{"start":{"row":17,"column":49},"end":{"row":17,"column":50},"action":"insert","lines":["t"]}],[{"start":{"row":17,"column":50},"end":{"row":17,"column":51},"action":"insert","lines":[" "],"id":94},{"start":{"row":17,"column":51},"end":{"row":17,"column":52},"action":"insert","lines":["f"]},{"start":{"row":17,"column":52},"end":{"row":17,"column":53},"action":"insert","lines":["o"]},{"start":{"row":17,"column":53},"end":{"row":17,"column":54},"action":"insert","lines":["r"]}],[{"start":{"row":17,"column":54},"end":{"row":17,"column":55},"action":"insert","lines":[" "],"id":95},{"start":{"row":17,"column":55},"end":{"row":17,"column":56},"action":"insert","lines":["n"]},{"start":{"row":17,"column":56},"end":{"row":17,"column":57},"action":"insert","lines":["o"]},{"start":{"row":17,"column":57},"end":{"row":17,"column":58},"action":"insert","lines":["w"]}],[{"start":{"row":18,"column":7},"end":{"row":18,"column":9},"action":"insert","lines":["()"],"id":96}],[{"start":{"row":18,"column":8},"end":{"row":18,"column":9},"action":"insert","lines":["P"],"id":97}],[{"start":{"row":18,"column":8},"end":{"row":18,"column":9},"action":"remove","lines":["P"],"id":98},{"start":{"row":18,"column":8},"end":{"row":18,"column":17},"action":"insert","lines":["PlayerDND"]}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"insert","lines":["."],"id":99}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"remove","lines":["."],"id":100}],[{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"insert","lines":[","],"id":101}],[{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"insert","lines":[" "],"id":102}],[{"start":{"row":18,"column":19},"end":{"row":18,"column":28},"action":"insert","lines":["PlayerDND"],"id":103}],[{"start":{"row":18,"column":29},"end":{"row":18,"column":30},"action":"insert","lines":[";"],"id":104}],[{"start":{"row":48,"column":0},"end":{"row":66,"column":20},"action":"remove","lines":["// \tfunds = user.getBet();","// \tholdfunds = 0;","// \tplayerBet = 0;","// \tinsuranceBet = 0;","// \tvalue = 0;","// \tcount = 0;","// \tfirstCard = 0;","// \tsecondCard = 0;","// \tdfirstCard = 0;","// \tdsecondCard = 0;","// \tBJcount = 0;","// \tmenuChoice = 0;","// \tround = 0;","// \tvalidResponse = false;","// \tflag = true;","// \tflag2 = false;","// \taceFlag = false;","// \tdealerAceFlag = false;","// \tyes_or_no = 'y';"],"id":105}],[{"start":{"row":47,"column":0},"end":{"row":47,"column":3},"action":"remove","lines":["// "],"id":106},{"start":{"row":49,"column":0},"end":{"row":49,"column":3},"action":"remove","lines":["// "]}],[{"start":{"row":47,"column":15},"end":{"row":47,"column":24},"action":"insert","lines":["PlayerDND"],"id":107}],[{"start":{"row":47,"column":24},"end":{"row":47,"column":25},"action":"insert","lines":[" "],"id":108},{"start":{"row":47,"column":25},"end":{"row":47,"column":26},"action":"insert","lines":["P"]},{"start":{"row":47,"column":26},"end":{"row":47,"column":27},"action":"insert","lines":["1"]}],[{"start":{"row":47,"column":27},"end":{"row":47,"column":28},"action":"insert","lines":[","],"id":109}],[{"start":{"row":47,"column":28},"end":{"row":47,"column":29},"action":"insert","lines":[" "],"id":110}],[{"start":{"row":47,"column":29},"end":{"row":47,"column":38},"action":"insert","lines":["PlayerDND"],"id":111}],[{"start":{"row":47,"column":38},"end":{"row":47,"column":39},"action":"insert","lines":[" "],"id":112},{"start":{"row":47,"column":39},"end":{"row":47,"column":40},"action":"insert","lines":["P"]},{"start":{"row":47,"column":40},"end":{"row":47,"column":41},"action":"insert","lines":["2"]}],[{"start":{"row":47,"column":44},"end":{"row":48,"column":0},"action":"insert","lines":["",""],"id":113},{"start":{"row":48,"column":0},"end":{"row":48,"column":1},"action":"insert","lines":["\t"]}],[{"start":{"row":48,"column":1},"end":{"row":48,"column":10},"action":"insert","lines":["PlayerDND"],"id":114}],[{"start":{"row":47,"column":0},"end":{"row":47,"column":3},"action":"insert","lines":["// "],"id":115},{"start":{"row":48,"column":0},"end":{"row":48,"column":3},"action":"insert","lines":["// "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":3},"action":"insert","lines":["// "]}],[{"start":{"row":45,"column":91},"end":{"row":45,"column":92},"action":"insert","lines":["\t"],"id":116}],[{"start":{"row":45,"column":92},"end":{"row":45,"column":93},"action":"insert","lines":["\t"],"id":117}],[{"start":{"row":45,"column":93},"end":{"row":45,"column":94},"action":"insert","lines":["\t"],"id":118}],[{"start":{"row":45,"column":94},"end":{"row":45,"column":95},"action":"insert","lines":["d"],"id":119},{"start":{"row":45,"column":95},"end":{"row":45,"column":96},"action":"insert","lines":["o"]},{"start":{"row":45,"column":96},"end":{"row":45,"column":97},"action":"insert","lines":["n"]},{"start":{"row":45,"column":97},"end":{"row":45,"column":98},"action":"insert","lines":["t"]}],[{"start":{"row":45,"column":98},"end":{"row":45,"column":99},"action":"insert","lines":[" "],"id":120},{"start":{"row":45,"column":99},"end":{"row":45,"column":100},"action":"insert","lines":["t"]},{"start":{"row":45,"column":100},"end":{"row":45,"column":101},"action":"insert","lines":["h"]},{"start":{"row":45,"column":101},"end":{"row":45,"column":102},"action":"insert","lines":["i"]},{"start":{"row":45,"column":102},"end":{"row":45,"column":103},"action":"insert","lines":["n"]},{"start":{"row":45,"column":103},"end":{"row":45,"column":104},"action":"insert","lines":["k"]}],[{"start":{"row":45,"column":104},"end":{"row":45,"column":105},"action":"insert","lines":[" "],"id":121},{"start":{"row":45,"column":105},"end":{"row":45,"column":106},"action":"insert","lines":["i"]}],[{"start":{"row":45,"column":106},"end":{"row":45,"column":107},"action":"insert","lines":[" "],"id":122},{"start":{"row":45,"column":107},"end":{"row":45,"column":108},"action":"insert","lines":["n"]},{"start":{"row":45,"column":108},"end":{"row":45,"column":109},"action":"insert","lines":["e"]},{"start":{"row":45,"column":109},"end":{"row":45,"column":110},"action":"insert","lines":["e"]},{"start":{"row":45,"column":110},"end":{"row":45,"column":111},"action":"insert","lines":["d"]}],[{"start":{"row":45,"column":111},"end":{"row":45,"column":112},"action":"insert","lines":[" "],"id":123},{"start":{"row":45,"column":112},"end":{"row":45,"column":113},"action":"insert","lines":["t"]},{"start":{"row":45,"column":113},"end":{"row":45,"column":114},"action":"insert","lines":["o"]}],[{"start":{"row":45,"column":114},"end":{"row":45,"column":115},"action":"insert","lines":[" "],"id":124},{"start":{"row":45,"column":115},"end":{"row":45,"column":116},"action":"insert","lines":["m"]},{"start":{"row":45,"column":116},"end":{"row":45,"column":117},"action":"insert","lines":["a"]},{"start":{"row":45,"column":117},"end":{"row":45,"column":118},"action":"insert","lines":["k"]},{"start":{"row":45,"column":118},"end":{"row":45,"column":119},"action":"insert","lines":["e"]}],[{"start":{"row":45,"column":119},"end":{"row":45,"column":120},"action":"insert","lines":[" "],"id":125},{"start":{"row":45,"column":120},"end":{"row":45,"column":121},"action":"insert","lines":["a"]}],[{"start":{"row":45,"column":121},"end":{"row":45,"column":122},"action":"insert","lines":[" "],"id":126},{"start":{"row":45,"column":122},"end":{"row":45,"column":123},"action":"insert","lines":["c"]},{"start":{"row":45,"column":123},"end":{"row":45,"column":124},"action":"insert","lines":["o"]},{"start":{"row":45,"column":124},"end":{"row":45,"column":125},"action":"insert","lines":["n"]},{"start":{"row":45,"column":125},"end":{"row":45,"column":126},"action":"insert","lines":["s"]},{"start":{"row":45,"column":126},"end":{"row":45,"column":127},"action":"insert","lines":["t"]},{"start":{"row":45,"column":127},"end":{"row":45,"column":128},"action":"insert","lines":["r"]},{"start":{"row":45,"column":128},"end":{"row":45,"column":129},"action":"insert","lines":["u"]},{"start":{"row":45,"column":129},"end":{"row":45,"column":130},"action":"insert","lines":["c"]},{"start":{"row":45,"column":130},"end":{"row":45,"column":131},"action":"insert","lines":["t"]},{"start":{"row":45,"column":131},"end":{"row":45,"column":132},"action":"insert","lines":["o"]},{"start":{"row":45,"column":132},"end":{"row":45,"column":133},"action":"insert","lines":["r"]},{"start":{"row":45,"column":133},"end":{"row":45,"column":134},"action":"insert","lines":[","]}],[{"start":{"row":45,"column":134},"end":{"row":45,"column":135},"action":"insert","lines":[" "],"id":127},{"start":{"row":45,"column":135},"end":{"row":45,"column":136},"action":"insert","lines":["a"]},{"start":{"row":45,"column":136},"end":{"row":45,"column":137},"action":"insert","lines":["s"]}],[{"start":{"row":45,"column":137},"end":{"row":45,"column":138},"action":"insert","lines":[" "],"id":128},{"start":{"row":45,"column":138},"end":{"row":45,"column":139},"action":"insert","lines":["t"]},{"start":{"row":45,"column":139},"end":{"row":45,"column":140},"action":"insert","lines":["h"]},{"start":{"row":45,"column":140},"end":{"row":45,"column":141},"action":"insert","lines":["e"]}],[{"start":{"row":45,"column":141},"end":{"row":45,"column":142},"action":"insert","lines":[" "],"id":129},{"start":{"row":45,"column":142},"end":{"row":45,"column":143},"action":"insert","lines":["p"]}],[{"start":{"row":45,"column":142},"end":{"row":45,"column":143},"action":"remove","lines":["p"],"id":130}],[{"start":{"row":45,"column":142},"end":{"row":45,"column":143},"action":"insert","lines":["c"],"id":131},{"start":{"row":45,"column":143},"end":{"row":45,"column":144},"action":"insert","lines":["o"]},{"start":{"row":45,"column":144},"end":{"row":45,"column":145},"action":"insert","lines":["m"]},{"start":{"row":45,"column":145},"end":{"row":45,"column":146},"action":"insert","lines":["p"]},{"start":{"row":45,"column":146},"end":{"row":45,"column":147},"action":"insert","lines":["i"]},{"start":{"row":45,"column":147},"end":{"row":45,"column":148},"action":"insert","lines":["u"]},{"start":{"row":45,"column":148},"end":{"row":45,"column":149},"action":"insert","lines":["l"]}],[{"start":{"row":45,"column":148},"end":{"row":45,"column":149},"action":"remove","lines":["l"],"id":132},{"start":{"row":45,"column":147},"end":{"row":45,"column":148},"action":"remove","lines":["u"]}],[{"start":{"row":45,"column":147},"end":{"row":45,"column":148},"action":"insert","lines":["l"],"id":133},{"start":{"row":45,"column":148},"end":{"row":45,"column":149},"action":"insert","lines":["e"]},{"start":{"row":45,"column":149},"end":{"row":45,"column":150},"action":"insert","lines":["r"]}],[{"start":{"row":45,"column":150},"end":{"row":45,"column":151},"action":"insert","lines":[" "],"id":134},{"start":{"row":45,"column":151},"end":{"row":45,"column":152},"action":"insert","lines":["w"]},{"start":{"row":45,"column":152},"end":{"row":45,"column":153},"action":"insert","lines":["i"]},{"start":{"row":45,"column":153},"end":{"row":45,"column":154},"action":"insert","lines":["t"]}],[{"start":{"row":45,"column":153},"end":{"row":45,"column":154},"action":"remove","lines":["t"],"id":135}],[{"start":{"row":45,"column":153},"end":{"row":45,"column":154},"action":"insert","lines":["l"],"id":136},{"start":{"row":45,"column":154},"end":{"row":45,"column":155},"action":"insert","lines":["l"]}],[{"start":{"row":45,"column":155},"end":{"row":45,"column":156},"action":"insert","lines":[" "],"id":137},{"start":{"row":45,"column":156},"end":{"row":45,"column":157},"action":"insert","lines":["a"]},{"start":{"row":45,"column":157},"end":{"row":45,"column":158},"action":"insert","lines":["u"]},{"start":{"row":45,"column":158},"end":{"row":45,"column":159},"action":"insert","lines":["t"]},{"start":{"row":45,"column":159},"end":{"row":45,"column":160},"action":"insert","lines":["o"]}],[{"start":{"row":45,"column":160},"end":{"row":45,"column":161},"action":"insert","lines":[" "],"id":138},{"start":{"row":45,"column":161},"end":{"row":45,"column":162},"action":"insert","lines":["m"]},{"start":{"row":45,"column":162},"end":{"row":45,"column":163},"action":"insert","lines":["a"]},{"start":{"row":45,"column":163},"end":{"row":45,"column":164},"action":"insert","lines":["k"]},{"start":{"row":45,"column":164},"end":{"row":45,"column":165},"action":"insert","lines":["e"]}],[{"start":{"row":45,"column":165},"end":{"row":45,"column":166},"action":"insert","lines":[" "],"id":139},{"start":{"row":45,"column":166},"end":{"row":45,"column":167},"action":"insert","lines":["a"]}],[{"start":{"row":45,"column":167},"end":{"row":45,"column":168},"action":"insert","lines":[" "],"id":140},{"start":{"row":45,"column":168},"end":{"row":45,"column":169},"action":"insert","lines":["d"]},{"start":{"row":45,"column":169},"end":{"row":45,"column":170},"action":"insert","lines":["e"]},{"start":{"row":45,"column":170},"end":{"row":45,"column":171},"action":"insert","lines":["f"]},{"start":{"row":45,"column":171},"end":{"row":45,"column":172},"action":"insert","lines":["a"]},{"start":{"row":45,"column":172},"end":{"row":45,"column":173},"action":"insert","lines":["u"]},{"start":{"row":45,"column":173},"end":{"row":45,"column":174},"action":"insert","lines":["l"]},{"start":{"row":45,"column":174},"end":{"row":45,"column":175},"action":"insert","lines":["t"]}],[{"start":{"row":45,"column":175},"end":{"row":45,"column":176},"action":"insert","lines":[" "],"id":141},{"start":{"row":45,"column":176},"end":{"row":45,"column":177},"action":"insert","lines":["a"]},{"start":{"row":45,"column":177},"end":{"row":45,"column":178},"action":"insert","lines":["n"]},{"start":{"row":45,"column":178},"end":{"row":45,"column":179},"action":"insert","lines":["d"]}],[{"start":{"row":45,"column":179},"end":{"row":45,"column":180},"action":"insert","lines":[" "],"id":142},{"start":{"row":45,"column":180},"end":{"row":45,"column":181},"action":"insert","lines":["t"]},{"start":{"row":45,"column":181},"end":{"row":45,"column":182},"action":"insert","lines":["h"]},{"start":{"row":45,"column":182},"end":{"row":45,"column":183},"action":"insert","lines":["e"]}],[{"start":{"row":45,"column":183},"end":{"row":45,"column":184},"action":"insert","lines":[" "],"id":143}],[{"start":{"row":45,"column":184},"end":{"row":45,"column":185},"action":"insert","lines":["p"],"id":144},{"start":{"row":45,"column":185},"end":{"row":45,"column":186},"action":"insert","lines":["l"]},{"start":{"row":45,"column":186},"end":{"row":45,"column":187},"action":"insert","lines":["a"]},{"start":{"row":45,"column":187},"end":{"row":45,"column":188},"action":"insert","lines":["y"]},{"start":{"row":45,"column":188},"end":{"row":45,"column":189},"action":"insert","lines":["e"]},{"start":{"row":45,"column":189},"end":{"row":45,"column":190},"action":"insert","lines":["r"]},{"start":{"row":45,"column":190},"end":{"row":45,"column":191},"action":"insert","lines":["s"]}],[{"start":{"row":45,"column":191},"end":{"row":45,"column":192},"action":"insert","lines":[" "],"id":145},{"start":{"row":45,"column":192},"end":{"row":45,"column":193},"action":"insert","lines":["a"]},{"start":{"row":45,"column":193},"end":{"row":45,"column":194},"action":"insert","lines":["l"]}],[{"start":{"row":45,"column":193},"end":{"row":45,"column":194},"action":"remove","lines":["l"],"id":146}],[{"start":{"row":45,"column":193},"end":{"row":45,"column":194},"action":"insert","lines":["r"],"id":147},{"start":{"row":45,"column":194},"end":{"row":45,"column":195},"action":"insert","lines":["e"]}],[{"start":{"row":45,"column":195},"end":{"row":45,"column":196},"action":"insert","lines":[" "],"id":148},{"start":{"row":45,"column":196},"end":{"row":45,"column":197},"action":"insert","lines":["a"]},{"start":{"row":45,"column":197},"end":{"row":45,"column":198},"action":"insert","lines":["l"]},{"start":{"row":45,"column":198},"end":{"row":45,"column":199},"action":"insert","lines":["r"]},{"start":{"row":45,"column":199},"end":{"row":45,"column":200},"action":"insert","lines":["e"]},{"start":{"row":45,"column":200},"end":{"row":45,"column":201},"action":"insert","lines":["a"]},{"start":{"row":45,"column":201},"end":{"row":45,"column":202},"action":"insert","lines":["d"]},{"start":{"row":45,"column":202},"end":{"row":45,"column":203},"action":"insert","lines":["y"]}],[{"start":{"row":45,"column":203},"end":{"row":45,"column":204},"action":"insert","lines":[" "],"id":149},{"start":{"row":45,"column":204},"end":{"row":45,"column":205},"action":"insert","lines":["d"]},{"start":{"row":45,"column":205},"end":{"row":45,"column":206},"action":"insert","lines":["e"]},{"start":{"row":45,"column":206},"end":{"row":45,"column":207},"action":"insert","lines":["c"]},{"start":{"row":45,"column":207},"end":{"row":45,"column":208},"action":"insert","lines":["l"]},{"start":{"row":45,"column":208},"end":{"row":45,"column":209},"action":"insert","lines":["a"]},{"start":{"row":45,"column":209},"end":{"row":45,"column":210},"action":"insert","lines":["r"]},{"start":{"row":45,"column":210},"end":{"row":45,"column":211},"action":"insert","lines":["e"]},{"start":{"row":45,"column":211},"end":{"row":45,"column":212},"action":"insert","lines":["d"]}],[{"start":{"row":45,"column":212},"end":{"row":45,"column":213},"action":"insert","lines":[" "],"id":150},{"start":{"row":45,"column":213},"end":{"row":45,"column":214},"action":"insert","lines":["i"]},{"start":{"row":45,"column":214},"end":{"row":45,"column":215},"action":"insert","lines":["n"]}],[{"start":{"row":45,"column":215},"end":{"row":45,"column":216},"action":"insert","lines":[" "],"id":151},{"start":{"row":45,"column":216},"end":{"row":45,"column":217},"action":"insert","lines":["t"]},{"start":{"row":45,"column":217},"end":{"row":45,"column":218},"action":"insert","lines":["h"]},{"start":{"row":45,"column":218},"end":{"row":45,"column":219},"action":"insert","lines":["e"]}],[{"start":{"row":45,"column":219},"end":{"row":45,"column":220},"action":"insert","lines":[" "],"id":152},{"start":{"row":45,"column":220},"end":{"row":45,"column":221},"action":"insert","lines":["p"]},{"start":{"row":45,"column":221},"end":{"row":45,"column":222},"action":"insert","lines":["r"]},{"start":{"row":45,"column":222},"end":{"row":45,"column":223},"action":"insert","lines":["i"]},{"start":{"row":45,"column":223},"end":{"row":45,"column":224},"action":"insert","lines":["v"]},{"start":{"row":45,"column":224},"end":{"row":45,"column":225},"action":"insert","lines":["a"]},{"start":{"row":45,"column":225},"end":{"row":45,"column":226},"action":"insert","lines":["t"]},{"start":{"row":45,"column":226},"end":{"row":45,"column":227},"action":"insert","lines":["e"]}],[{"start":{"row":4,"column":1},"end":{"row":4,"column":138},"action":"remove","lines":["pragma once\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// This command is designed to cause the current source file to be included only once in a single compilation"],"id":153},{"start":{"row":4,"column":1},"end":{"row":5,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"remove","lines":["#"],"id":154},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":3,"column":0},"end":{"row":3,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1524693634461}